declare let dataMemory: {
    [key: string]: any;
};
interface Storage {
    readonly length: number;
    clear(): void;
    getItem(key: string): string | null;
    removeItem(key: string): void;
    setItem(key: string, value: string): void;
}
export declare class MemoryStorage {
    static setItem(key: string, value: any): any;
    static getItem(key: string): any;
    static removeItem(key: string): boolean;
    static clear(): typeof dataMemory;
    static key(index: number): string;
}
type StorageType = 'sessionStorage' | 'localStorage';
export declare class StorageHelper implements Storage {
    private storageWindow;
    getItem(key: string): string | null;
    setItem(key: string, value: string): void;
    removeItem(key: string): void;
    clear(): void;
    get length(): number;
    constructor(storageType: StorageType);
    getStorage(): Storage;
}
export {};
//# sourceMappingURL=index.d.ts.map