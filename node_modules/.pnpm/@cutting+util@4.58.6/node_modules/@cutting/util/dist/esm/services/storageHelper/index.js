/* eslint-disable @typescript-eslint/no-explicit-any */
let dataMemory = {};
export class MemoryStorage {
    static setItem(key, value) {
        dataMemory[key] = value;
        return dataMemory[key];
    }
    static getItem(key) {
        return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;
    }
    static removeItem(key) {
        return delete dataMemory[key];
    }
    static clear() {
        dataMemory = {};
        return dataMemory;
    }
    static key(index) {
        return dataMemory[index];
    }
}
export class StorageHelper {
    storageWindow;
    getItem(key) {
        return this.getStorage().getItem(key);
    }
    setItem(key, value) {
        this.getStorage().setItem(key, value);
    }
    removeItem(key) {
        this.getStorage().removeItem(key);
    }
    clear() {
        this.getStorage().clear();
    }
    get length() {
        return this.getStorage().length;
    }
    constructor(storageType) {
        try {
            localStorage;
            this.storageWindow = window[storageType];
            this.storageWindow.setItem('cutting.test-ls', '1');
            this.storageWindow.removeItem('cutting.test-ls');
        }
        catch (exception) {
            this.storageWindow = MemoryStorage;
        }
    }
    getStorage() {
        return this.storageWindow;
    }
}
//# sourceMappingURL=index.js.map