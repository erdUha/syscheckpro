import r from"mousetrap";import{useRef as t,useEffect as e}from"react";import{isObject as n}from"@cutting/util";import{jsx as o}from"react/jsx-runtime";import s from"classnames";const c=r=>!!n(r)&&"combination"in r,a=r=>!!n(r)&&"sequence"in r;function i(r,t){return(Array.isArray(r)?r:[r]).join(t)}const u=r=>{if(r)for(;r.length;)r.pop()},p=({shortcutMap:n,ref:o,handler:s})=>{const p=t([]),f=t();return e((()=>{if(!f.current)if(o){if(o.current)return f.current=new r(o.current),()=>{f.current&&f.current.reset()}}else f.current=r}),[o]),e((()=>{if(!f.current)return;const r=p.current,t=f.current,e=(r=>{const t=[];for(const e of Object.keys(r)){const n=r[e];if(c(n)){const r=i(n.combination,"+");t.push({keys:r,action:{type:e}})}else if(a(n)){const r=i(n.sequence," ");t.push({keys:r,action:{type:e}})}else if(Array.isArray(n)){const r=n.map((r=>"string"==typeof r?r:i(r," ")));t.push({keys:r,action:{type:e}})}else"string"==typeof n&&t.push({keys:n,action:{type:e}})}return t})(n);for(const r of e)t.bind(r.keys,(t=>{t.stopPropagation(),s(r.action,t)})),r.trapper=t;return u(r),r.push(...e),()=>{r.forEach((r=>{r.trapper&&r.trapper.unbind(r.keys),t.reset()}))}}),[s,o,n]),{shortcuts:p.current}};var f;function m({tabIndex:r=-1,ScopedWrapperFunctionComponent:e="div",shortcutMap:n,handler:c,className:a,dataSelector:i="keyboard-shortcuts",children:u}){const f=t(null);return p({shortcutMap:n,handler:c,ref:f}),o(e,{"data-testid":i,tabIndex:r,ref:f,className:s("mousetrap",a),children:u})}!function(r){r.Alt="meta",r.Command="command",r.Ctrl="ctrl",r.DownArrow="down",r.Enter="enter",r.Escape="esc",r.LeftArrow="left",r.Mod="mod",r.RightArrow="right",r.Shift="shift",r.UpArrow="up"}(f||(f={}));export{f as KeyCode,m as Shortcuts,u as clearArray,c as isCombination,a as isSequence,p as useShortcuts};
//# sourceMappingURL=index.js.map
