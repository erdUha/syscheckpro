{"version":3,"file":"index.js","sources":["../../src/utils/guards.ts","../../src/buildShortcuts.ts","../../src/utils/clearArray.ts","../../src/useShortcuts.ts","../../src/types/keycodes.ts","../../src/components/Shortcuts/Shortcuts.tsx"],"sourcesContent":["import { isObject } from '@cutting/util';\nimport type { Combination, Sequence } from '../types/types.js';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isCombination = (o: any): o is Combination<typeof o> => {\n  if (!isObject(o)) {\n    return false;\n  }\n\n  return 'combination' in o;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isSequence = (o: any): o is Sequence<typeof o> => {\n  if (!isObject(o)) {\n    return false;\n  }\n\n  return 'sequence' in o;\n};\n","import type { ShortcutAction } from './types/types.js';\nimport { isCombination, isSequence } from './utils/guards';\n\nfunction createKeyStrokes(keyStrokes: string | string[], separator: '+' | ' '): string {\n  const keys = Array.isArray(keyStrokes) ? keyStrokes : [keyStrokes];\n\n  return keys.join(separator);\n}\nexport const buildShortcuts = <R extends Record<string, unknown>>(map: R): ShortcutAction<keyof R>[] => {\n  const shortcutActions: ShortcutAction<keyof R>[] = [];\n\n  for (const key of Object.keys(map)) {\n    const shortcut = map[key];\n\n    if (isCombination(shortcut)) {\n      const keys = createKeyStrokes(shortcut.combination, '+');\n\n      shortcutActions.push({ keys, action: { type: key } });\n    } else if (isSequence(shortcut)) {\n      const keys = createKeyStrokes(shortcut.sequence, ' ');\n\n      shortcutActions.push({ keys, action: { type: key } });\n    } else if (Array.isArray(shortcut)) {\n      const keys = shortcut.map((element) => {\n        if (typeof element === 'string') {\n          return element;\n        }\n\n        return createKeyStrokes(element, ' ');\n      });\n\n      shortcutActions.push({ keys, action: { type: key } });\n    } else if (typeof shortcut === 'string') {\n      shortcutActions.push({ keys: shortcut, action: { type: key } });\n    }\n  }\n\n  return shortcutActions;\n};\n","export const clearArray = <T>(a: T[]): void => {\n  if (!a) {\n    return;\n  }\n\n  while (a.length) {\n    a.pop();\n  }\n};\n","import type { ExtendedKeyboardEvent, MousetrapInstance, MousetrapStatic } from 'mousetrap';\nimport mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\nimport { buildShortcuts } from './buildShortcuts';\nimport type { ShortcutAction, UseShortcuts, UseShortcutsResults } from './types/types.js';\nimport { clearArray } from './utils/clearArray';\n\nexport const useShortcuts = <R extends Record<PropertyKey, unknown>, E extends HTMLElement = HTMLElement>({\n  shortcutMap,\n  ref,\n  handler,\n}: UseShortcuts<R, E>): UseShortcutsResults<R> => {\n  const shortcutsRef = useRef<ShortcutAction<keyof R>[]>([]);\n  const mousetrapRef = useRef<MousetrapStatic | MousetrapInstance>();\n\n  useEffect(() => {\n    if (!!mousetrapRef.current) {\n      return;\n    }\n\n    if (!ref) {\n      mousetrapRef.current = mousetrap;\n      return;\n    }\n\n    if (!ref.current) {\n      return;\n    }\n\n    mousetrapRef.current = new mousetrap(ref.current);\n\n    return (): void => {\n      mousetrapRef.current && mousetrapRef.current.reset();\n    };\n  }, [ref]);\n\n  useEffect(() => {\n    if (!mousetrapRef.current) {\n      return;\n    }\n\n    const shortcuts = shortcutsRef.current;\n    const trapper = mousetrapRef.current;\n\n    const shortcutActions = buildShortcuts(shortcutMap);\n\n    for (const shortcut of shortcutActions) {\n      trapper.bind(shortcut.keys, (e: ExtendedKeyboardEvent) => {\n        e.stopPropagation();\n\n        handler(shortcut.action, e);\n      });\n\n      shortcut.trapper = trapper;\n    }\n\n    clearArray(shortcuts);\n\n    shortcuts.push(...shortcutActions);\n\n    return (): void => {\n      shortcuts.forEach((shortcut) => {\n        if (shortcut.trapper) {\n          shortcut.trapper.unbind(shortcut.keys);\n        }\n\n        trapper.reset();\n      });\n    };\n  }, [handler, ref, shortcutMap]);\n\n  // for testing\n  return { shortcuts: shortcutsRef.current };\n};\n","export enum KeyCode {\n  Alt = 'meta',\n  Command = 'command',\n  Ctrl = 'ctrl',\n  DownArrow = 'down',\n  Enter = 'enter',\n  Escape = 'esc',\n  LeftArrow = 'left',\n  Mod = 'mod', // On Mac this ends up mapping to command whereas on Windows and Linux it maps to ctrl.\n  RightArrow = 'right',\n  Shift = 'shift',\n  UpArrow = 'up',\n}\n","import type { PropsWithChildren } from 'react';\nimport { useRef } from 'react';\nimport cs from 'classnames';\nimport { useShortcuts } from '../../useShortcuts.js';\nimport type { ShortcutsProps } from './types.js';\n\nexport function Shortcuts<R extends Record<PropertyKey, unknown>, E extends HTMLElement = HTMLElement>({\n  tabIndex = -1,\n  ScopedWrapperFunctionComponent = 'div',\n  shortcutMap,\n  handler,\n  className,\n  dataSelector = 'keyboard-shortcuts',\n  children,\n}: PropsWithChildren<ShortcutsProps<R, E>>): JSX.Element {\n  const ref = useRef<HTMLElement>(null);\n\n  useShortcuts({\n    shortcutMap,\n    handler,\n    ref,\n  });\n\n  return (\n    <ScopedWrapperFunctionComponent\n      data-testid={dataSelector}\n      tabIndex={tabIndex}\n      ref={ref}\n      className={cs('mousetrap', className)}\n    >\n      {children}\n    </ScopedWrapperFunctionComponent>\n  );\n}\n"],"names":["isCombination","o","isObject","isSequence","createKeyStrokes","keyStrokes","separator","Array","isArray","join","clearArray","a","length","pop","useShortcuts","shortcutMap","ref","handler","shortcutsRef","useRef","mousetrapRef","useEffect","current","mousetrap","reset","shortcuts","trapper","shortcutActions","map","key","Object","keys","shortcut","combination","push","action","type","sequence","element","buildShortcuts","bind","e","stopPropagation","forEach","unbind","KeyCode","Shortcuts","tabIndex","ScopedWrapperFunctionComponent","className","dataSelector","children","_jsx","cs"],"mappings":"kLAIa,MAAAA,EAAiBC,KACvBC,EAASD,IAIP,gBAAiBA,EAIbE,EAAcF,KACpBC,EAASD,IAIP,aAAcA,ECfvB,SAASG,EAAiBC,EAA+BC,GAGvD,OAFaC,MAAMC,QAAQH,GAAcA,EAAa,CAACA,IAE3CI,KAAKH,EACnB,CACO,MCRMI,EAAiBC,IAC5B,GAAKA,EAIL,KAAOA,EAAEC,QACPD,EAAEE,KACH,ECAUC,EAAe,EAC1BC,cACAC,MACAC,cAEA,MAAMC,EAAeC,EAAkC,IACjDC,EAAeD,IA2DrB,OAzDAE,GAAU,KACR,IAAMD,EAAaE,QAInB,GAAKN,GAKL,GAAKA,EAAIM,QAMT,OAFAF,EAAaE,QAAU,IAAIC,EAAUP,EAAIM,SAElC,KACLF,EAAaE,SAAWF,EAAaE,QAAQE,OAAO,OAXpDJ,EAAaE,QAAUC,CAYxB,GACA,CAACP,IAEJK,GAAU,KACR,IAAKD,EAAaE,QAChB,OAGF,MAAMG,EAAYP,EAAaI,QACzBI,EAAUN,EAAaE,QAEvBK,EFpCoB,CAAoCC,IAChE,MAAMD,EAA6C,GAEnD,IAAK,MAAME,KAAOC,OAAOC,KAAKH,GAAM,CAClC,MAAMI,EAAWJ,EAAIC,GAErB,GAAI7B,EAAcgC,GAAW,CAC3B,MAAMD,EAAO3B,EAAiB4B,EAASC,YAAa,KAEpDN,EAAgBO,KAAK,CAAEH,OAAMI,OAAQ,CAAEC,KAAMP,IAC9C,MAAM,GAAI1B,EAAW6B,GAAW,CAC/B,MAAMD,EAAO3B,EAAiB4B,EAASK,SAAU,KAEjDV,EAAgBO,KAAK,CAAEH,OAAMI,OAAQ,CAAEC,KAAMP,IAC9C,MAAM,GAAItB,MAAMC,QAAQwB,GAAW,CAClC,MAAMD,EAAOC,EAASJ,KAAKU,GACF,iBAAZA,EACFA,EAGFlC,EAAiBkC,EAAS,OAGnCX,EAAgBO,KAAK,CAAEH,OAAMI,OAAQ,CAAEC,KAAMP,IAC9C,KAA8B,iBAAbG,GAChBL,EAAgBO,KAAK,CAAEH,KAAMC,EAAUG,OAAQ,CAAEC,KAAMP,IAE1D,CAED,OAAOF,CAAe,EEOIY,CAAexB,GAEvC,IAAK,MAAMiB,KAAYL,EACrBD,EAAQc,KAAKR,EAASD,MAAOU,IAC3BA,EAAEC,kBAEFzB,EAAQe,EAASG,OAAQM,EAAE,IAG7BT,EAASN,QAAUA,EAOrB,OAJAhB,EAAWe,GAEXA,EAAUS,QAAQP,GAEX,KACLF,EAAUkB,SAASX,IACbA,EAASN,SACXM,EAASN,QAAQkB,OAAOZ,EAASD,MAGnCL,EAAQF,OAAO,GACf,CACH,GACA,CAACP,EAASD,EAAKD,IAGX,CAAEU,UAAWP,EAAaI,QAAS,MCxEhCuB,ECMN,SAAUC,GAAuFC,SACrGA,GAAW,EAAEC,+BACbA,EAAiC,MAAKjC,YACtCA,EAAWE,QACXA,EAAOgC,UACPA,EAASC,aACTA,EAAe,qBAAoBC,SACnCA,IAEA,MAAMnC,EAAMG,EAAoB,MAQhC,OANAL,EAAa,CACXC,cACAE,UACAD,QAIAoC,EAACJ,EACc,CAAA,cAAAE,EACbH,SAAUA,EACV/B,IAAKA,EACLiC,UAAWI,EAAG,YAAaJ,GAE1BE,SAAAA,GAGP,EDjCA,SAAYN,GACVA,EAAA,IAAA,OACAA,EAAA,QAAA,UACAA,EAAA,KAAA,OACAA,EAAA,UAAA,OACAA,EAAA,MAAA,QACAA,EAAA,OAAA,MACAA,EAAA,UAAA,OACAA,EAAA,IAAA,MACAA,EAAA,WAAA,QACAA,EAAA,MAAA,QACAA,EAAA,QAAA,IACD,CAZD,CAAYA,IAAAA,EAYX,CAAA"}